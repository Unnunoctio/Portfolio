---
import { db, eq, inArray, Skill, ProjectSkill, Project } from 'astro:db';
import type { Skill as SkillType } from '../types';
import SkillBadge from './SkillBadge.astro';

interface Props {
  title: string;
}

const { title } = Astro.props;
const { path } = Astro.params;

let skills: SkillType[] = []
if (path === undefined) {
  skills = await db.select().from(Skill)
} else {
  const project = (await db.select().from(Project).where(eq(Project.path, path as string)))[0]
  const skills_id = (await db.select().from(ProjectSkill).where(eq(ProjectSkill.project_id, project.project_id))).map((s) => s.skill_id)

  skills = await db.select().from(Skill).where(inArray(Skill.skill_id, skills_id))
}

skills.sort((a, b) => a.order - b.order)
---

<div class="mt-16 p-4 w-full max-w-skill-box bg-bg-skills rounded-2xl shadow-skills"> 
  <h2 class="text-2xl">{title}</h2>
  <ul class="flex flex-wrap gap-3 mt-4">
    {skills.map(skill => (
      <li><SkillBadge {...skill} /></li>
    ))}
  </ul>
</div>

